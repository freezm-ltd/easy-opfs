(function(d,h){typeof exports=="object"&&typeof module<"u"?h(exports):typeof define=="function"&&define.amd?define(["exports"],h):(d=typeof globalThis<"u"?globalThis:d||self,h(d["easy-opfs"]={}))})(this,function(d){"use strict";var h=class extends EventTarget{constructor(){super(...arguments),this._bubbleMap=new Map}async waitFor(e){return new Promise(a=>{this.addEventListener(e,a,{once:!0})})}callback(e,a){this.waitFor(e).then(s=>a(s))}dispatch(e,a){this.dispatchEvent(new CustomEvent(e,a?{detail:a}:void 0))}listen(e,a,s){this.addEventListener(e,a,s)}remove(e,a,s){this.removeEventListener(e,a,s)}listenOnce(e,a){this.listen(e,a,{once:!0})}listenOnceOnly(e,a,s){const l=i=>{s(i)&&(this.remove(e,l),a(i))};this.listen(e,l)}listenDebounce(e,a,s={timeout:100,mode:"last"}){switch(s.mode){case"first":return this.listenDebounceFirst(e,a,s);case"last":return this.listenDebounceLast(e,a,s)}}listenDebounceFirst(e,a,s={timeout:100}){let l=0;this.listen(e,i=>{const c=Date.now();c-l>s.timeout&&a(i),l=c},s)}listenDebounceLast(e,a,s={timeout:100}){let l;this.listen(e,i=>{clearTimeout(l),l=window.setTimeout(()=>a(i),s.timeout)},s)}enableBubble(e){if(this._bubbleMap.has(e))return;const a=s=>{var l;(l=this.parent)==null||l.dispatch(s.type,s.detail)};this.listen(e,a),this._bubbleMap.set(e,a)}disableBubble(e){if(!this._bubbleMap.has(e))return;const a=this._bubbleMap.get(e);this.remove(e,a),this._bubbleMap.delete(e)}},g=class extends EventTarget{constructor(){super(...arguments),this._bubbleMap=new Map}async waitFor(t){return new Promise(e=>{this.addEventListener(t,e,{once:!0})})}callback(t,e){this.waitFor(t).then(a=>e(a))}dispatch(t,e){this.dispatchEvent(new CustomEvent(t,e?{detail:e}:void 0))}listen(t,e,a){this.addEventListener(t,e,a)}remove(t,e,a){this.removeEventListener(t,e,a)}listenOnce(t,e){this.listen(t,e,{once:!0})}listenOnceOnly(t,e,a){const s=l=>{a(l)&&(this.remove(t,s),e(l))};this.listen(t,s)}listenDebounce(t,e,a={timeout:100,mode:"last"}){switch(a.mode){case"first":return this.listenDebounceFirst(t,e,a);case"last":return this.listenDebounceLast(t,e,a)}}listenDebounceFirst(t,e,a={timeout:100}){let s=0;this.listen(t,l=>{const i=Date.now();i-s>a.timeout&&e(l),s=i},a)}listenDebounceLast(t,e,a={timeout:100}){let s;this.listen(t,l=>{clearTimeout(s),s=window.setTimeout(()=>e(l),a.timeout)},a)}enableBubble(t){if(this._bubbleMap.has(t))return;const e=a=>{var s;(s=this.parent)==null||s.dispatch(a.type,a.detail)};this.listen(t,e),this._bubbleMap.set(t,e)}disableBubble(t){if(!this._bubbleMap.has(t))return;const e=this._bubbleMap.get(t);this.remove(t,e),this._bubbleMap.delete(t)}};function N(){return crypto.randomUUID()}var b="post-together";function F(t){return t.id&&t.type&&t.__identifier===b}function H(t){return"data"in t&&F(t.data)}function p(t){if(H(t))return t.data}var X=class{constructor(t,e){this.listenFrom=t,this.sendTo=e,this.activated=!0,this.listenerWeakMap=new WeakMap,this.listenerSet=new Set}createRequest(t,e){return{id:N(),type:t,payload:e,__type:"request",__identifier:b}}createResponse(t,e){const{id:a,type:s,__identifier:l}=t;return{id:a,type:s,payload:e,__type:"response",__identifier:l}}async _inject(t){}responseCallback(t,e){const a=async s=>{const l=p(s);l&&l.id===t.id&&l.type===t.type&&l.__type==="response"&&(await this._inject(l),this.listenFrom.removeEventListener("message",a),e(l.payload.data,l.payload.transfer))};return this.listenFrom.addEventListener("message",a),()=>this.listenFrom.removeEventListener("message",a)}_getSendTo(t){let e=this.sendTo;if(t){const a=t.source;a&&(e=a)}return e}async _send(t,e){const a={transfer:t.payload.transfer};G()&&Object.assign(a,{targetOrigin:"*"}),this._getSendTo(e).postMessage(t,a)}request(t,e,a=5e3){return new Promise(async(s,l)=>{const i=this.createRequest(t,e),c=this.responseCallback(i,(n,j)=>s({data:n,transfer:j}));await this._send(i),setTimeout(()=>{c(),l(`MessengerRequestTimeoutError: request timeout reached: ${a}ms`)},a)})}wrapMessageHandler(t,e){return async a=>{const s=p(a);if(s&&s.type===t&&s.__type==="request"&&this.activated){await this._inject(s);const l=await e(s.payload.data,s.payload.transfer),i=this.createResponse(s,l);await this._send(i,a)}}}response(t,e){if(this.listenerSet.has(e))throw new Error("MessengerAddEventListenerError: this message handler already attached");const a=this.wrapMessageHandler(t,e);this.listenerWeakMap.set(e,a),this.listenerSet.add(e),this.listenFrom.addEventListener("message",a)}deresponse(t){const e=t?[t]:this.listenerSet;for(let a of e){const s=this.listenerWeakMap.get(a);s&&(this.listenFrom.removeEventListener("message",s),this.listenerWeakMap.delete(a)),this.listenerSet.delete(a)}}activate(){this.activated||(this.activated=!0)}deactivate(){this.activated&&(this.activated=!1)}},L=class extends X{constructor(t,e,a){super(t,e),this.listenFrom=t,this.sendTo=e,this.sendToOrigin=a}async _send(t,e){this._getSendTo(e).postMessage(t,{transfer:t.payload.transfer,targetOrigin:this.sendToOrigin})}},W="https://freezm-ltd.github.io/post-together/iframe/",y=new URL(W).origin;function G(t){return globalThis.constructor===globalThis.Window?(t||(t=window.origin),t===y):!1}var Y=`${b}:__store`,R=`${b}:__fetch`,K=class extends X{async _inject(t){if(t.payload)return;const{id:e}=t,a=await u.fetch(e);if(a.data==="error")throw new Error("BroadcastChannelMessengerFetchPayloadError: MessageHub fetch failed.");t.payload=a}async _send(t){if(t.payload.transfer){const{payload:e,...a}=t;if((await u.store(t)).data!=="success")throw new Error("BroadcastChannelMessengerSendError: MessageHub store failed.");this._getSendTo().postMessage(a)}else this._getSendTo().postMessage(t)}},m=class extends g{constructor(){super(),this.state="off",this.listenFroms=new Set,this.init()}async init(){if(this.state!=="on"){if(this.state==="initializing")return await this.waitFor("done");this.state="initializing",await this._init(),this.state="on",this.dispatch("done")}}async _init(){}async store(t){await this.init();const e=await this.target.request(Y,{data:t,transfer:t.payload.transfer});if(e&&e.data==="success")return e;throw new Error("MessageHubStoreError: MessagHub returned corrupted or unsuccessful response.")}async fetch(t){await this.init();const e=await this.target.request(R,{data:t});if(e&&e.data!=="error"&&e.transfer)return e;throw new Error("MessageHubFetchError: MessagHub returned corrupted or unsuccessful response.")}async addListen(t){if(await this.init(),this.listenFroms.has(t))return;const e=r.new(t);this.listenFroms.add(t),e.response(Y,async a=>await this.store(a)),e.response(R,async a=>await this.fetch(a))}},f=class extends m{constructor(){super(...arguments),this.storage=new Map}async _init(){this.addListen(self)}async store(t){return this.storage.set(t.id,t.payload),{data:"success"}}async fetch(t){let e=this.storage.get(t);return e||{data:"error"}}},w=class extends m{async _init(){this.target=r.new(self)}},M=class extends m{async _initSameOrigin(){globalThis.navigator.serviceWorker.controller?(this.target=r.new(globalThis.navigator.serviceWorker),window.parent.postMessage("loadend",{targetOrigin:"*"})):(setTimeout(()=>{window.location.assign(window.location.href)},1e3),await new Promise(()=>{}))}async _initCrossOrigin(){let t=!1;const e=document.createElement("iframe"),a=s=>{G(s.origin)&&s.data==="loadend"&&(t=!0,this.dispatch("iframeloadend"),window.removeEventListener("message",a))};window.addEventListener("message",a),e.setAttribute("src",W),e.style.display="none",document.body.appendChild(e),t||await this.waitFor("iframeloadend"),this.target=new L(window,e.contentWindow,y)}async _init(){G()?await this._initSameOrigin():await this._initCrossOrigin(),this.addListen(window)}},u=class Z{constructor(){this.changeHub()}changeHub(){switch(globalThis.constructor){case globalThis.ServiceWorkerGlobalScope:this.hub=new f;break;case globalThis.Window:this.hub=new M;break;case globalThis.DedicatedWorkerGlobalScope:this.hub=new w;break;default:throw new Error("MessageHubConstructError: Cannot create MessageHub instance in this scope.")}}static init(){Z._instance||(Z._instance=new Z)}static get instance(){return this.init(),Z._instance}static async store(e){return this.instance.hub.store(e)}static async fetch(e){return this.instance.hub.fetch(e)}static async addListen(e){return this.instance.hub.addListen(e)}},r=class{constructor(){}static new(t){if(!t)throw new Error("MessengerFactoryNoOptionError: Cannot create Messenger, argument 'option' is not provided");let e,a;switch(t.constructor){case globalThis.ServiceWorker:{a=window.navigator.serviceWorker,e=t;break}case globalThis.ServiceWorkerContainer:{a=t,e=t.controller;break}case globalThis.ServiceWorkerGlobalScope:{a=t,e=void 0;break}case globalThis.Worker:{a=e=t,u.addListen(t);break}case globalThis.DedicatedWorkerGlobalScope:{a=e=t;break}case globalThis.Window:{const s=t;a=window,e=s;break}case globalThis.Client:{a=self,e=t;break}case globalThis.BroadcastChannel:{const s=t.name;return new K(new BroadcastChannel(s),new BroadcastChannel(s))}case globalThis.MessagePort:{a=e=t;break}}if(a)return new X(a,e);throw new Error("MessengerFactoryError: Cannot create Messenger, arguments not supported")}};u.init();function J(t){return t.split("/").filter(Boolean)}function k(t){return J(t).join("/")}const V="",S=t=>Uint8Array.from(atob(t),e=>e.charCodeAt(0)),z=typeof self<"u"&&self.Blob&&new Blob([S(V)],{type:"text/javascript;charset=utf-8"});function x(t){let e;try{if(e=z&&(self.URL||self.webkitURL).createObjectURL(z),!e)throw"";const a=new Worker(e,{name:t==null?void 0:t.name});return a.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(e)}),a}catch{return new Worker("data:text/javascript;base64,"+V,{name:t==null?void 0:t.name})}finally{e&&(self.URL||self.webkitURL).revokeObjectURL(e)}}const C="easy-opfs";function I(...t){return`${C}:${t.join(":")}`}const v=new BroadcastChannel(I("public-head"));function T(t){return new BroadcastChannel(I(t))}class o{constructor(){this.worker=new x,this.workerMessenger=r.new(this.worker),this.broadcastMessenger=r.new(v)}static get instance(){return o._instance||(o._instance=new o),o._instance}static async checkHandle(e){return(await this.instance.broadcastMessenger.request(e,{data:void 0})).data.ok}static async addHandle(e){const a=(await this.instance.workerMessenger.request("add",{data:e})).data;if(a.ok)return a;const s=(await this.instance.broadcastMessenger.request(e.path,{data:void 0})).data;if(s.ok)return s;throw new Error("OpfsWorkerAddHandleError: Cannot create/request OpfsHandle.")}static async deleteHandle(e){const a=(await this.instance.workerMessenger.request("delete",{data:e})).data;if(a.ok)return a;throw new Error("OpfsWorkerDeleteHandleError: Cannot delete OpfsHandle.")}}class B extends h{constructor(e){super(),this.state="off",this.path=k(e),this.messenger=r.new(T(this.path)),this.init()}async _init(){this.state="initializing",await o.addHandle({path:this.path}),this.state="on",this.dispatch("done")}async init(){if(this.state!=="on"){if(this.state==="initializing")return await this.waitFor("done");if(this.state==="off")return await this._init()}}_read(e,a){const{readable:s,writable:l}=new TransformStream({transform(c,n){n.enqueue(c),e+=c.length,a&&(a-=c.length)}});return(async()=>{for(;;)try{const c=await this.messenger.request("read",{data:{at:e,length:a}});if(!c.data.ok)throw new Error("OpfsFileReadError: OpfsWorker returned error: ",c.data.error);await c.data.data.pipeTo(l,{preventClose:!0,preventAbort:!0,preventCancel:!0}),await l.close();break}catch{await this._init()}})(),s}async read(e=0,a){return await this.init(),this._read(e,a)}async _write(e,a){for(;;)try{const s=await this.messenger.request("write",{data:{source:e,at:a}});if(!s.data.ok)throw new Error("OpfsFileWriteError: OpfsWorker returned error: ",s.data.error);e.transfer(0);return}catch{await this._init()}}async write(e,a,s){if(await this.init(),a||(s?a=(await this.messenger.request("head",{data:void 0})).data.size:a=0),e instanceof ArrayBuffer)return await this._write(e,a);const l=this;let i=a;const c=new WritableStream({async write(n){await l._write(n.buffer,i),i+=n.length}});await e.pipeTo(c)}async delete(){return await this.messenger.request("delete",{data:{path:this.path}})}async writeText(e){const a=new TextEncoder().encode(e);await this.write(a.buffer)}async readText(){const e=await this.read();return await new Response(e).text()}}d.OpfsFile=B,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
